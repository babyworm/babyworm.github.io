<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Testbench on Babyworm Hugo Site</title>
    <link>http://localhost:8080/tags/testbench/</link>
    <description>Recent content in Testbench on Babyworm Hugo Site</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>babyworm@gmail.com (babyworm)</managingEditor>
    <webMaster>babyworm@gmail.com (babyworm)</webMaster>
    <copyright>© Babyworm, All Rights Reserved.</copyright>
    <lastBuildDate>Tue, 28 Nov 2006 14:29:08 +0000</lastBuildDate>
    <atom:link href="http://localhost:8080/tags/testbench/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>검증의 대세는 system verilog?</title>
      <link>http://localhost:8080/archives/207/</link>
      <pubDate>Tue, 28 Nov 2006 14:29:08 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/207/</guid>
      <description>검증 작업을 시작했다는 포스팅을 얼마전에 했었습니다. 뭐, 일단 검증 시나리오 짜고, function coverage 전략 세우고.. 이런것 부터 시작했습니다만.. verilog로 약간 검증 마인드로 이런 저런 것을 작성하다보니, synthesizable subset의 틀이 얼마나 옭죄고 있었나라는 생각이 심각히 들더군요.. verilog 표준에서 정의된 동작에 대해서 어느정도는 알고 있다고 자부하고</description>
    </item>
  </channel>
</rss>
