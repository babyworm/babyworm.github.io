<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VPI Handle on Babyworm Hugo Site</title>
    <link>http://localhost:8080/tags/vpi-handle/</link>
    <description>Recent content in VPI Handle on Babyworm Hugo Site</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>babyworm@gmail.com (babyworm)</managingEditor>
    <webMaster>babyworm@gmail.com (babyworm)</webMaster>
    <copyright>© Babyworm, All Rights Reserved.</copyright>
    <lastBuildDate>Mon, 29 May 2006 14:36:17 +0000</lastBuildDate>
    <atom:link href="http://localhost:8080/tags/vpi-handle/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>verilog PLI 배우기(2); VPI handle</title>
      <link>http://localhost:8080/archives/19/</link>
      <pubDate>Mon, 29 May 2006 14:36:17 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/19/</guid>
      <description>지난번에 이야기하고, 너무 많은 시간이 지났군요.. acc_, tf_ 와 다르게 VPI는 handle이라는 데이터 구조체를 이용하여 verilog simulator의 데이터 구조체에 접근합니다. acc_, tf_ 의 경우에도 handle(정확히는 handle이라 부를만한 것)이 없는 건 아니지만, verilog simulator의 실제적인 데이터 object에 직접 접근한다는</description>
    </item>
  </channel>
</rss>
