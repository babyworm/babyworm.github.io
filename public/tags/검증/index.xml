<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>검증 on Babyworm Hugo Site</title>
    <link>http://localhost:8080/tags/%EA%B2%80%EC%A6%9D/</link>
    <description>Recent content in 검증 on Babyworm Hugo Site</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>babyworm@gmail.com (babyworm)</managingEditor>
    <webMaster>babyworm@gmail.com (babyworm)</webMaster>
    <copyright>© Babyworm, All Rights Reserved.</copyright>
    <lastBuildDate>Fri, 05 Dec 2008 05:34:35 +0000</lastBuildDate>
    <atom:link href="http://localhost:8080/tags/%EA%B2%80%EC%A6%9D/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Modelsim에서의 Code Coverage</title>
      <link>http://localhost:8080/archives/1320/</link>
      <pubDate>Fri, 05 Dec 2008 05:34:35 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/1320/</guid>
      <description>예전에 후배가 한 세미나 자료에서 그림을 많이 발췌합니다. 항상 검증을 언제 끝낼 것인가 하는 문제는 어렵습니다. 그래서, 검증할 때 coverage를 측정하여 검증을 언제 마칠것이냐 하는 것을 참고하게 됩니다. Functional verification때 고려하는 coverage로는 code coverage와 function coverage라는 것이 있는데, code cov</description>
    </item>
    <item>
      <title>검증의 대세는 system verilog?</title>
      <link>http://localhost:8080/archives/207/</link>
      <pubDate>Tue, 28 Nov 2006 14:29:08 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/207/</guid>
      <description>검증 작업을 시작했다는 포스팅을 얼마전에 했었습니다. 뭐, 일단 검증 시나리오 짜고, function coverage 전략 세우고.. 이런것 부터 시작했습니다만.. verilog로 약간 검증 마인드로 이런 저런 것을 작성하다보니, synthesizable subset의 틀이 얼마나 옭죄고 있었나라는 생각이 심각히 들더군요.. verilog 표준에서 정의된 동작에 대해서 어느정도는 알고 있다고 자부하고</description>
    </item>
    <item>
      <title>TLM으로 설계가 이동할 것인가?</title>
      <link>http://localhost:8080/archives/140/</link>
      <pubDate>Mon, 23 Oct 2006 02:04:10 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/140/</guid>
      <description>Transaction Level Modeling(이후 TLM)이라는 것이 한 2-3년전부터 SoC설계 분야에서 논문/책/툴을 쏟아내고 있습니다. 그만큼 이제 시장 상황이 익어간다는 것이겠지요. 하지만 설계라는 분야에서 RTL에서 TLM 수준으로 추상화 수준이 이동할 것이라고 믿었던 사람들도 이제는 거의 TLM 수준에서 설계가 이루어질 것이라 믿고 있지 않습니다. 그 이유는</description>
    </item>
    <item>
      <title>신화의 세계에 살것인가?</title>
      <link>http://localhost:8080/archives/93/</link>
      <pubDate>Thu, 28 Sep 2006 11:30:00 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/93/</guid>
      <description>개인적으로 SoC에서 가장 재미있게 생각하는 부분이 검증/디버깅입니다. 처음부터 버그없는 넘을 만들면 좋겠지만, 그럴수 없다면 효과적인 검증과 디버깅은 “비용을 소모하는 부수적인 일”이 아니라 이미 필수적인 일인 것입니다. 간혹 몇몇 경영자분들께서 “자신이 실수를 하고 자신이 디버깅하는데 시간과 돈을 소모하는 건 전적으로 엔지니어의 부주의</description>
    </item>
  </channel>
</rss>
