<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on Babyworm Hugo Site</title>
    <link>http://localhost:8080/tags/go/</link>
    <description>Recent content in Go on Babyworm Hugo Site</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>babyworm@gmail.com (babyworm)</managingEditor>
    <webMaster>babyworm@gmail.com (babyworm)</webMaster>
    <copyright>© Babyworm, All Rights Reserved.</copyright>
    <lastBuildDate>Sat, 15 Oct 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:8080/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Contribute</title>
      <link>http://localhost:8080/post/docs/how-to-contribute/</link>
      <pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/post/docs/how-to-contribute/</guid>
      <description>Contributing to Jane There are many ways to contribute to the Jane theme: submitting pull requests, reporting issues, providing new translations, and creating suggestions.&#xA;Build and Run If you want to understand how Jane works, you&amp;rsquo;ll want to get the source, build it, and run locally.&#xA;Getting the sources 1 git clone https://github.com/xianmin/hugo-theme-jane.git Prerequisites You need install the Hugo_extended version to use Hugo Pipes.&#xA;We recommend that you use VSCode. And if you edit .html files, recommend you install prettier and prettier-plugin-go-template globally . And open Prettier: Resolve Global Modules in your VSCode Settings.&#xA;1 npm install -g prettier prettier-plugin-go-template Watch example Site 1 hugo server --contentDir=&amp;#39;./exampleSite/content&amp;#39; --config=&amp;#39;dev-config.toml&amp;#39; Directory Structure layouts/ Stores templates in the form of .html files that specify how views of your content will be rendered into a static website. assets/ stores all the scss &amp;amp; js source files, Hugo Pipes will bundle them to resources/ folder. </description>
    </item>
    <item>
      <title>Creating a New Theme</title>
      <link>http://localhost:8080/post/other/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/post/other/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.&#xA;We&amp;rsquo;ll start with creating a new site with a very basic template. Then we&amp;rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.&#xA;In this tutorial, commands that you enter will start with the &amp;ldquo;$&amp;rdquo; prompt. The output will follow. Lines that start with &amp;ldquo;#&amp;rdquo; are comments that I&amp;rsquo;ve added to explain a point. When I show updates to a file, the &amp;ldquo;:wq&amp;rdquo; on the last line means to save the file.&#xA;Here&amp;rsquo;s an example:</description>
    </item>
    <item>
      <title>(Hu)go Template Primer</title>
      <link>http://localhost:8080/post/other/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/post/other/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for&#xA;its template engine. It is an extremely lightweight engine that provides a very&#xA;small amount of logic. In our experience that it is just the right amount of&#xA;logic to be able to create a good static website. If you have used other&#xA;template systems from different languages or frameworks you will find a lot of&#xA;similarities in go templates.&#xA;This document is a brief primer on using go templates. The go docs&#xA;provide more details.&#xA;Introduction to Go Templates Go templates provide an extremely simple template language. It adheres to the&#xA;belief that only the most basic of logic belongs in the template or view layer.&#xA;One consequence of this simplicity is that go templates parse very quickly.&#xA;A unique characteristic of go templates is they are content aware. Variables and&#xA;content will be sanitized depending on the context of where they are used.</description>
    </item>
    <item>
      <title>Getting Started with Hugo</title>
      <link>http://localhost:8080/post/other/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/post/other/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the&#xA;appropriate version for your os and architecture.&#xA;Save it somewhere specific as we will be using it in the next step.&#xA;More complete instructions are available at installing hugo&#xA;Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site&#xA;you are reading right now.&#xA;Follow the following steps:&#xA;Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:&#xA;git clone https://github.com/gohugoio/hugo cd hugo /path/to/where/you/installed/hugo server --source=./docs &amp;gt; 29 pages created &amp;gt; 0 tags index created &amp;gt; in 27 ms &amp;gt; Web Server is available at http://localhost:1313 &amp;gt; Press ctrl+c to stop Once you&amp;rsquo;ve gotten here, follow along the rest of this page on your local build.&#xA;Step 3. Change the docs site Stop the Hugo process by hitting ctrl+c.</description>
    </item>
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>http://localhost:8080/post/other/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/post/other/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there.&#xA;With Jekyll, something that looked like&#xA;▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become&#xA;▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.&#xA;Create your Hugo configuration file Hugo can read your configuration as JSON, YAML or TOML. Hugo supports parameters custom configuration too. Refer to the Hugo configuration documentation for details.&#xA;Set your configuration publish folder to _site The default is for Jekyll to publish to _site and for Hugo to publish to public. If, like me, you have _site mapped to a git submodule on the gh-pages branch, you&amp;rsquo;ll want to do one of two alternatives:</description>
    </item>
  </channel>
</rss>
