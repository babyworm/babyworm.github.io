<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Verilog HDL on Babyworm Hugo Site</title>
    <link>http://localhost:8080/tags/verilog-hdl/</link>
    <description>Recent content in Verilog HDL on Babyworm Hugo Site</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>babyworm@gmail.com (babyworm)</managingEditor>
    <webMaster>babyworm@gmail.com (babyworm)</webMaster>
    <copyright>© Babyworm, All Rights Reserved.</copyright>
    <lastBuildDate>Sun, 15 Feb 2009 23:06:05 +0000</lastBuildDate>
    <atom:link href="http://localhost:8080/tags/verilog-hdl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DVCon의 결과..</title>
      <link>http://localhost:8080/archives/1367/</link>
      <pubDate>Sun, 15 Feb 2009 23:06:05 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/1367/</guid>
      <description>질문 게시판의 내용이지만, 답변은 여기에 ^^; http://theasicguy.com/2009/01/27/dvcon-survey-results-what-do-they-mean/ 에 DVCon Survey 결과가 있었습니다. DVCon은 가끔 언급했지만, verification 부분에서 가장 큰 행사 중의 하나이지요. ESNUG에서도 곧 여러가지 설문 결과나 행사 기간동안 가장 많이 팔린 책들에 대한 언급이 있을 텐데요.. 올 한해 책 지름의 기반이 되겠지요. 여하튼, 설문의 결과는 예상대로.. 라고 말씀드릴 수 있습니</description>
    </item>
    <item>
      <title>PLI와 Simulator의 연결(I)</title>
      <link>http://localhost:8080/archives/284/</link>
      <pubDate>Mon, 11 Jun 2007 14:45:03 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/284/</guid>
      <description>Automated Functional Verification 방법에는 여러 가지가 있지만, testvector 발생 유닛(보통 Directed Random방식을 사용하지요?)과 golden model을 이용한 checker model을 만들어서 DUV(Design Under Verification)의 결과와 비교하는 것이 가장 편한 방법 중에 하나임은 부정할 수 없습니다. (여담입니다만, 국내에서는 많은 경우 golden model없이 설계하는 경우가 많아서 검증을 위하여</description>
    </item>
    <item>
      <title>Perl을 이용해서 검증할때 유용한 팁</title>
      <link>http://localhost:8080/archives/282/</link>
      <pubDate>Mon, 04 Jun 2007 14:46:20 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/282/</guid>
      <description>뭐랄까요.. 요즘 이런 저런 일로 바쁘다보니, 사람이 좀 얇팍하게 글을 쓰게되네요. 🙂 (퇴고 없이 그냥 온라인에서 쓰는 글이라 앞뒤가 없을지도 모르겠습니다.) 오늘은 여러분들께서 perl을 이용해서 Verilog HDL을 위한 testbench를 작성할 때 간단히 명령어 해석기를 만들어 사용하는 방법을 알려드리죠. 이 방법은 제가 JTAG을 위한 pro</description>
    </item>
    <item>
      <title>PSL을 포함한 새로운 VHDL 표준.. Verilog를 넘을수 있을까?</title>
      <link>http://localhost:8080/archives/197/</link>
      <pubDate>Thu, 16 Nov 2006 11:38:27 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/197/</guid>
      <description>EEtimes를 보니 VHDL 2006 표준이 Accellera에서 승인되어서 IEEE standard 승인을 기다리게 되었다고 합니다. [wp]VHDL[/wp]은 제 블로그에서도 몇번 다루었듯이, 초반의 열광적인 지지와는 반대로 설계 언어로서는 Verilog에 비하여 점유율을 높이지 못하고 있었지요. (Gartner Dataquest의 EDA 분석책임자인 Gary Smith 씨에 의하면 오</description>
    </item>
    <item>
      <title>Verilog 관련 검색에 대한 친절한(?) 답변과 리퍼러 로그..</title>
      <link>http://localhost:8080/archives/173/</link>
      <pubDate>Fri, 10 Nov 2006 08:26:03 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/173/</guid>
      <description>요즘에 리퍼러 로그를 보니, 검색을 통하여 들어오시는 분들이 상당하시군요.. (덕분에 gzip 플러그인을 통해 전송량을 절반으로 줄여놨었지만, 다시 트래픽이 차오르고 있습니다. ㅠㅠ; 물론, 많은 분들이 찾아주시는 건 좋은 일이지요.. 이 분야에 관심 있는 분들이 많다는 것이니까요..) 이 포스팅은 리퍼러 로그에 남은 검색어를 통하여 살펴본, 제 블로</description>
    </item>
    <item>
      <title>Verilog newsgroup에서의 몇가지 이야기</title>
      <link>http://localhost:8080/archives/163/</link>
      <pubDate>Sat, 04 Nov 2006 12:59:53 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/163/</guid>
      <description>verilog news group에는 여러가지 verilog 관련 이야기가 나오는데.. 몇가지만 옮겨 봅니다. Implicit Zero Padding? verilog의 bit 확장에 대한 부분인데요.. 간략히 써보면 다음과 같은 질문입니다. verilog가 큰 수에 작은수를 대입할때 ‘0’으로 채우는 것으로 알고 있어. [CODE] module tilde (output reg[7:0] z, input [3:0] a); &amp;nbsp; &amp;nbsp; always @* begin &amp;nbsp; &amp;nbsp; &amp;nbsp; z = ~a; &amp;nbsp; &amp;nbsp; end endmodule[/CODE] 위의 예에서도 상위 4비트는 ‘0</description>
    </item>
    <item>
      <title>GeSHi를 사용하는 CodeHighlighter를 위한 verilog문법 정의 파일</title>
      <link>http://localhost:8080/archives/153/</link>
      <pubDate>Sat, 28 Oct 2006 12:27:48 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/153/</guid>
      <description>테터보드나 WordPress에서 GeSHi라는 문법 강조기를 이용하여 code highlighting 모듈이 많이 만들어지고 있습니다. 제가 사용하고 있는 Lang-to-HTML도 그렇구요.. 아쉬운 점은 제가 블로그상에 자주 포스팅하는 내용이 verilog HDL이라는 하드웨어 설계/기술 언어를 사용해서 설명되는 경우가 많은데.. GeSHi에는 verilog HDL code에 대한</description>
    </item>
    <item>
      <title>TLM으로 설계가 이동할 것인가?</title>
      <link>http://localhost:8080/archives/140/</link>
      <pubDate>Mon, 23 Oct 2006 02:04:10 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/140/</guid>
      <description>Transaction Level Modeling(이후 TLM)이라는 것이 한 2-3년전부터 SoC설계 분야에서 논문/책/툴을 쏟아내고 있습니다. 그만큼 이제 시장 상황이 익어간다는 것이겠지요. 하지만 설계라는 분야에서 RTL에서 TLM 수준으로 추상화 수준이 이동할 것이라고 믿었던 사람들도 이제는 거의 TLM 수준에서 설계가 이루어질 것이라 믿고 있지 않습니다. 그 이유는</description>
    </item>
    <item>
      <title>[verilog] wire와 reg</title>
      <link>http://localhost:8080/archives/72/</link>
      <pubDate>Wed, 13 Sep 2006 15:17:14 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/72/</guid>
      <description>예전에는 verilog동호회니 asic동호회니 나름대로 활발히 활동했었는데, 점점 숙제도와주기 동호회가 되가서 잘 안가게 되었습니다. 정말 오랫만에 오늘 verilog동호회에 갔는데, 위의 질문이 있더군요. 저 질문은 제가 대답한 것만 한 3번 정도이고.. 자세히 정리해서 쓴적도 한번 있을 정도로 verilog를 배우시는 분들에게 있어</description>
    </item>
    <item>
      <title>verilog HDL, System Verilog, system C, e, vera.. PLI</title>
      <link>http://localhost:8080/archives/23/</link>
      <pubDate>Thu, 01 Jun 2006 13:28:13 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/23/</guid>
      <description>대충 ASIC 엔지니어들이 사용하는 언어들이죠.. 아니! VHDL을 빼 먹었잖아~! 하고 말 하시는 분도 있겠지만, 개인적으로 석사 3학기때 이후로 VHDL은 안쓰고 있는지라, 잘 몰라서 그렇다.. 라고 생각하셔도 좋겠습니다. 또한, 개인적으로는 VHDL이 verilog에 비하여 많은 부분에서 상당히 밀리고 있으며, 그것이 요즘 경향이라고 생각</description>
    </item>
    <item>
      <title>verilog PLI 배우기(2); VPI handle</title>
      <link>http://localhost:8080/archives/19/</link>
      <pubDate>Mon, 29 May 2006 14:36:17 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/19/</guid>
      <description>지난번에 이야기하고, 너무 많은 시간이 지났군요.. acc_, tf_ 와 다르게 VPI는 handle이라는 데이터 구조체를 이용하여 verilog simulator의 데이터 구조체에 접근합니다. acc_, tf_ 의 경우에도 handle(정확히는 handle이라 부를만한 것)이 없는 건 아니지만, verilog simulator의 실제적인 데이터 object에 직접 접근한다는</description>
    </item>
    <item>
      <title>Verilog PLI 배우기 (1)</title>
      <link>http://localhost:8080/archives/17/</link>
      <pubDate>Thu, 18 May 2006 13:30:28 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/17/</guid>
      <description>Verilog 사용자가 별로 없는지라(이 이야기에 발끈~하는 엔지니어 분들도 계시겠지만, 사실 C언어 사용자 보다는 적은거 맞잖습니까.., 우리나라 사람들중에 공학도 중에, 전자공학도 중에, verilog HDL을 쓰는 분을 따지면 별로 안되죠..^^) 국내에는 verilog PLI에 대하여 다루고 있는 페이지도 별로 없다. 개인적으로도 verilog PLI 관련 내용은 외국의 웹 페이지나,</description>
    </item>
    <item>
      <title>Michael D. Ciletti 의 Verilog HDL 시리즈</title>
      <link>http://localhost:8080/archives/12/</link>
      <pubDate>Sun, 07 May 2006 14:30:15 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/12/</guid>
      <description>오늘 소개드릴 책은 Ciletti의 verilog HDL 책들입니다. 실제로 제가 읽은 책은 Modeling, Synthesis, and Rapid Prototyping with the VERILOG (TM) HDL 과 Advanced Digital Design With the Verilog Hdl 의 두권입니다만, 최신간으로 Starter’s Guide to Verilog 2001 라는 책이 추가 되었더군요.. Ciletti의 책은 기본적으로 “참고서”적인 책입니다. 특히 “Modeling Synthesis… “라는 책은 거의 verilog HDL의</description>
    </item>
  </channel>
</rss>
