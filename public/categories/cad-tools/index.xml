<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CAD Tools on Babyworm Hugo Site</title>
    <link>http://localhost:8080/categories/cad-tools/</link>
    <description>Recent content in CAD Tools on Babyworm Hugo Site</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>babyworm@gmail.com (babyworm)</managingEditor>
    <webMaster>babyworm@gmail.com (babyworm)</webMaster>
    <copyright>© Babyworm, All Rights Reserved.</copyright>
    <lastBuildDate>Tue, 09 Jan 2018 17:22:51 +0000</lastBuildDate>
    <atom:link href="http://localhost:8080/categories/cad-tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Parallelized Logic Simulation</title>
      <link>http://localhost:8080/archives/2051/</link>
      <pubDate>Tue, 09 Jan 2018 17:22:51 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/2051/</guid>
      <description>얼마전부터 parallel simulation이 큰 이슈가 되었습니다. 몇몇 기사에서는 3세대 simulation 기법이라고 이야기하더군요. Verilog-XL 처럼 interpreter 형태를 1세대로, 2 세대를 finesim, VCS, NCVerilog 처럼 compiled 형태를 2세대로, 그리고, 다수의 processor를 동시에 쓰는 형태를 3세대로 이야기하는 거죠. 그간 simulation에서 multicore를 사용하는 건 별로 없</description>
    </item>
    <item>
      <title>DVCON 2017 간략 리뷰</title>
      <link>http://localhost:8080/archives/1944/</link>
      <pubDate>Sun, 05 Mar 2017 16:15:57 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/1944/</guid>
      <description>바로 밑에 DVCON 2016리뷰가 있는 걸 보니, blog에 얼마나 무관심했는지 약간 죄책감이 듭니다만 꺼리가 생겼으니 써야겠죠. DVCON(Design &amp;amp; Verification Conference)은 산업계에서 주도해서 열고 있는 회의로, DVCON을 주최하고 있는 Accellra(http://accellera.org/)가 SystemC, VHDL, SystemVerilog, UVM, IP-XACT, UPF등의 굵직굵직한 산업계의 주</description>
    </item>
    <item>
      <title>EDA playground</title>
      <link>http://localhost:8080/archives/1815/</link>
      <pubDate>Fri, 20 Jun 2014 07:56:38 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/1815/</guid>
      <description>오랫만에 포스팅하네요. 사실 그동안 심신을 지치게 했던 project를 마무리했기 때문에 비교적 가벼운 마음이 되었습니다. 오늘 소개할 것은 EDA playground 라는 사이트입니다. http://www.edaplayground.com/home 그 동안 UVM이니 뭐니 이야기를 많이 했는데, 직장인 분들은 회사 밖에서는 뭔가를 할 수 없는 환경이라서 집에서는 간단한 공부하기도 쉽지 않았을 것입니다. (물론 능력 되시는 분들</description>
    </item>
    <item>
      <title>wxPython</title>
      <link>http://localhost:8080/archives/1728/</link>
      <pubDate>Sat, 22 Sep 2012 17:40:51 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/1728/</guid>
      <description>예전에 simulator를 만들때 cross platform에서 GUI를 만드는 것이 참 어려웠던 기억이 있습니다. 그나마 좀 쓸만한 것이 TK 기반의 gui들인데, 그나마 perl-tk를 이용하는 것이 가장 무난했던 것 같습니다. (그 전에는 TCL/TK를 썼지만, linux에 perl은 windows를 제외한 대부분의 platform에 p</description>
    </item>
    <item>
      <title>Synopsys 버전을 찾아보기..</title>
      <link>http://localhost:8080/archives/763/</link>
      <pubDate>Fri, 11 Apr 2008 00:30:35 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/763/</guid>
      <description>Solvnet newsletter으로 보내진 reference script를 보다보니, 세상이 많이 바뀌긴 한거 같습니다. ^^; Doony님께서도 블로그에 쓰셨습니다만, 저희도 Synopsys의 Design Compiler에 대한 의존도가 높다보니, Reference Methdology에 대하여 관심을 가지지 않을 수 없지요. Design Compiler를 여러가지 버젼을 혼용하는 환경에</description>
    </item>
    <item>
      <title>Mentor의 verifiaction seminar</title>
      <link>http://localhost:8080/archives/277/</link>
      <pubDate>Thu, 03 May 2007 11:36:25 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/277/</guid>
      <description>Tool Vendor들의 세미나 계절인지라, Mentor도 검증 관련 세미나를 하는군요. 관심있으신 분은 참고하세요. 행사 일정: 5월 16일/ 임페리얼 펠리스 호텔 행사 등록: http://mentorkr.com/event/200705/form.html 오늘날의 SoC 디자인은 전체 SoC Verification 플로우 측면에서 최적의 효율성과 능률성을 가져올 수 있는 솔루션을 필요로 하고 있습니다. Mentor Graphics는 ESL(electronic system level design) 및 High-level-synthesis technology, 그리고 Advanced verification</description>
    </item>
    <item>
      <title>Precision이 Synplify Pro보다 좋은 성능을 낸다고 하네요.</title>
      <link>http://localhost:8080/archives/225/</link>
      <pubDate>Wed, 27 Dec 2006 14:43:47 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/225/</guid>
      <description>Mentor의 FPGA 합성 툴인 Precision. FPGA 합성 도구.. 삼파전?이라는 글에서 잠시 다룬적이 있는데, 사실 그 글을 사용할때는 예전 FPGA Advantage에 번들링 되어 있던 Precision을 생각하고 썼었는데요.. ESNUG의 글을 보니 Precision이 Synplify Pro보다 더 좋은 결과를 내준다는 보고가 최근에 들어왔네요. 게다가 가격은 Synplify Pro의</description>
    </item>
    <item>
      <title>FPGA 합성 도구..  삼파전?</title>
      <link>http://localhost:8080/archives/193/</link>
      <pubDate>Mon, 13 Nov 2006 09:55:10 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/193/</guid>
      <description>[wp]FPGA[/wp]의 사용이 늘어나면서 이쪽 합성 분야에 눈독을 들이는 회사들이 늘어나고 있군요.. 사실 FPGA 설계/합성 도구는 무료로 제공되는 경우가 많아서.. ([wp]xilinx[/wp] webpack이나 [wp]altera[/wp]의 quartus II web version과 같이 말입니다.)비교적 돈이 덜 됩니다만.. 무료로 제공되는 설계도구가 비교적 약한 편이</description>
    </item>
    <item>
      <title>Design Compiler의 TNS, WNS..</title>
      <link>http://localhost:8080/archives/170/</link>
      <pubDate>Wed, 08 Nov 2006 11:09:31 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/170/</guid>
      <description>오늘은 지난번 posting에 이어서 front-end 설계 엔지니어에게 있어서 주요 설계 도구중의 하나인 Design Compiler의 constraint 주는 방법에 대해서 Total negative slack과 Worst Negative slack의 관점에서 간략히 설명해 보겠습니다. Design compiler는 잘 아시다시피 constraint 기반으로 optimization을 진행합니다. 즉, 설계를 어떤 방식으로 합성하여 최적화시</description>
    </item>
    <item>
      <title>Synopsys XG모드로 가야 하나..</title>
      <link>http://localhost:8080/archives/156/</link>
      <pubDate>Tue, 31 Oct 2006 14:20:12 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/156/</guid>
      <description>사실 logic synthesis에 있어서 synopsys design compiler가 가지고 있는 비중은 정말로 큽니다. ASIC designer가 거치는 전체 설계 flow에서 logic synthesis는 어찌보면 implementation의 시작지점이기 때문에 아주 중요합니다. 거기서 만들어진 netlist의 질, 지정된 constraint들이 이후의 툴들에</description>
    </item>
    <item>
      <title>DC Ultra의 Topographical Synthesis</title>
      <link>http://localhost:8080/archives/121/</link>
      <pubDate>Mon, 16 Oct 2006 14:17:29 +0000</pubDate><author>babyworm@gmail.com (babyworm)</author>
      <guid>http://localhost:8080/archives/121/</guid>
      <description>로직 합성에 많이 사용되는 Design Compiler에서는 전통적으로 통계적인 wire load model을 이용하였습니다. 즉, 합성된 로직의 크기가 어느정도라면, 이때 적용되는 wire의 R, C값이 어느정도가 될지 대략 통계값을 통하여 추정하는 방법입니다. 이러한 wire load model은 0.35um 이전의 공정까지는 어느정도 적용하는데 큰 무리가 없었습니다. 왜냐하면</description>
    </item>
  </channel>
</rss>
